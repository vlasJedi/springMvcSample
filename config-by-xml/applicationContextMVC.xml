<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="org.mvcsample" />

<!--    Enables annotations coming from MVC package as @Controller, @Mapping-->
    <mvc:annotation-driven />

    <bean id="templateResolver"
          class="org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".html" />
    </bean>

<!--    Spring provides its expression evaluation and thymeleaf uses it-->
    <bean id="templateEngine" class="org.thymeleaf.spring6.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
        <property name="enableSpringELCompiler" value="true"/>
    </bean>

    <!--
    Implementation of the Spring Web MVC ViewResolver interface.
    View resolvers execute after the controller ends its execution.
    They receive the name of the view to be processed and are in charge of creating
    (and configuring) the corresponding View object for it.-->
    <bean class="org.thymeleaf.spring6.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <!--can exist several view resolvers as JSP-->
        <property name="order" value="1"/>
        <!--viewnames pattern associated with this viewresolver
        that returned by @Controller methods-->
        <property name="viewNames" value="*"/>
    </bean>

</beans>